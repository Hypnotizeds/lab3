#включитль <йострим>
#включитль <вектор>
#включчицы <строка>чтоцЭТО
использователи;

//Клас CReserveInfo - инфорация о заповедной
клас CReserveInfo {
кастный:
 строка имия;
 вектор<строка> маршруты;
 вектор<строка> объекты;

библичный:
 CReserveInfo(конст строка и изервName) : имия(резервName) {}

 пустота АддМаршрут(конст строка и мауршрут) {
 маршруты.push_back(маршрут);
    }

 статика Оббавит оббббббббббббббббббъект
 объекты.push_back(обж);
    }

 протота ПолюситРезервинофо() конст {
 каут << "Заповедник": "<< imya <<"\нМаршруты: " << маршрутов.
    }
}}}};

//Клас CUserProfily - prophilj polzovatelya
клас КУсерПрофил {{{{
кастный:
 строка имя пользовалая;
 строка электроная похта;
 вектор<строка> бронироварния;<строка> бронироварния;<строка> бронироварния;<строка> бронирования;

библичный:
 CUserProfill (конст чтрока и поллзовавал, канст строка - это пофхта): Имья Ползовал (поллзовалы), Электроная Похта (постата) {} (конт чтрока - пользовал, кантрока - покта): Имья Полцовалль (поллзовалы), электроная pohta (плжоваль), электрона погта (погста) {}  (когтрока) и попольцовал, (конст чтрока и поллзовавал, канст строка - это пофхта): Имья Поллзоваl (поллзовалы), электроная похта (похтаста) {}(конст строка и пользовал, канст строка и почта) : Имья Ползовала(пользоваль), электроная похта(похта) {}

 протота Добавит Забронирование (конст строка и бронирование) {(конст строка - это бронирование) {(конст строка и бронированш) (конст строка и бронирование) {(конст строка и бронирование) {
 бронированиястория.push_back (бронирование);push_back (бронирование);push_back (бронирование);push_back(бронирование);
    }

 куктота GetUserInfo() конст {GetUserInfo() конст {GetUserInfo() конст {GetUserInfo() конст {
 каут "Пользовал:" << imya pollzovatelya << "\нЭлектронная похта: " << Электронная пофочтата <<"\нИсторовой: "<< бронировария.размёр() << конек;"Poljzoval:" << imya pollzovatelya << "\нElelektronnnaya pohta:" << Elelektronnna Appocta << "\нIstoriya Bronirovoy:" << bronirovarioIstoria.razmer () << бронировария.razmer () кнеконькория;"Пользовал:" << imya pollzovatelya << "\нЭлектронная похта: " << Электронная почта <<"\нИстория Бронировой: "<< bronirovаniеIstoria.razmer() << конец;"Пользовал:" << ихипользовалая << "\нЭлектронная похта: " << Электронная почта << "\нИстория Бронировой: " << bronirovаniеIstoria.razmer() << конец;
    }
}}}};

//Клас CBookingManager - уравновешенность бронирами
клас CBookingManager {{{{
кастный:
 вектор<строка> бронироварния;<строка> бронироварния;<строка> бронироварния;<строка> бронироварния;

библичный:
 пакстота Книга(конст строка и мауршрут) {(конст строка и мауршрут) {(конст строка и мауршрут) {(конст строка и мауршрут) {
 бронирования.push_back (маршрут);push_back (маршрут);push_back (маршрут);push_back(маршрут);
 каут << "Маршрут" << marshrut << "забронирован". . . << конец; "Маршрут" << marshrut << "забронирован". . . << конец;"Маршрут" << marshrut << "забронирован". . . << конец;"Маршрут" << marshrut << "забронирован". . . << конец;
    }

 протота Полюкчит Бронировское() конст {() конст { () конст {() конст {
 каут << "Всего бронировой:" << bronirovаniya.razmer() << конек;"Всего бронировой:" << bronirovаniya.razmer() << конец;"Всего бронировой:" << бронирования.razmer() << конек;"Всего бронировой:" << бронирования.razmer() << конец;
    }
}}}};

//Клас CMapNavigator - интерактива заповедная
клас CMapNavigator {{{{
библичный:
 покастат Показат Карту() конст {() конст {() конст {() конст {
 каут << "Otobrarajeniе karta zapovewewegnay... << konec; "Отображение карта заповедная..." << конец; конец;"Отображение карта заповедная..." << конец;"Отображение карта заповедная..." << конец;
    }

 протота НавигацияТо(конст чтрока и располе) конст {(конст строка и Располе) конст { (конст строка и располе) конст (конст чтрока и располе) конст {(конст строка и располе) конст {
 каут << "Навигация к объекту:" << méstopologeniе << endl;"Навигация к объекту:" << méstopologeniе << endl;"местополия конца";Навигация к объекту:" << méstopologeniе << endl;"Навигация к объекту:" << méstopologeniе << endl;
    }
}}}};

//Клас CNotificationService - cervis uvedomléniy
клас CNotificationService {
библичный:
 протота Отправит Уведомление(конст строка и собенье) конст {
 каут << "Уведомление": "<< сobenniе << endl";
    }
};

//Клас CFeedbackManager - обратная связь
klас CFeedbackManager {
библичный:
 протота ОтправитОтзыв(конст строка и обратная связь) конст {
 каут << "Отзыв отправлен:" << отзыв << endl;
    }
};

//Пример использования класов в програме
инт основной() {
    //Создание экземпляров класов
 CReserveИнфо резервИнформация("Заповедник 'Таига'");
 резервИнфо.АддМаршрут("Маршрут 1");
 резервИнфо.Добавить объект("МОРЕ");

 Пользователь CUserProfileПрофиль("Иван Иванов", "ivan@example.com");
 пользовательПрофиль.ДобавитьЗабронирование("Маршрут 60");

 CBookingManager bookingManager;
 bookingManager.Книга("Маршрут 12");

 CMapNavigator mapNavigator;
 картаНавигатор.Показать карту();
 картаНавигатор.НавигацияTo("Озеро");

 CNotificationУведомление об обслуживанииСервис;
 уведомлениеСервис.ОтправитьУведомление("Завтра ожидаетсья дождь".);

 CFeedbackМенеджер обратной связи;
 менеджер обратной связи.ОтправитьОтзыв("Отличный заповедник, no nughno boboljseléy.");

    //Выводские информации о полонцели и заповедники
 пользовательПрофиль.GetUserInfo();
    reserveInfo.ReserveInfo();

    return 0;
}
